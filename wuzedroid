#!/bin/bash
##################################################################################
##### LICENSE ####################################################################
##################################################################################
####                                                                          ####
#### Copyright (C) 2018 wuseman <info@sendit.nu>                              ####
####                                                                          ####
#### This program is free software: you can redistribute it and/or modify     ####
#### it under the terms of the GNU General Public License as published by     ####
#### the Free Software Foundation, either version 3 of the License, or        ####
#### (at your option) any later version.                                      ####
####                                                                          ####
#### This program is distributed in the hope that it will be useful,          ####
#### but WITHOUT ANY WARRANTY; without even the implied warranty of           ####
#### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            ####
#### GNU General Public License at <http://www.gnu.org/licenses/> for         ####
#### more details.                                                            ####
####                                                                          ####
##################################################################################
##### GREETINGS ##################################################################
##################################################################################
####                                                                          ####
#### To all developers that contributes to all kind of open source projects   ####
#### Keep up the good work!                                                   #<3#
####                                                                          ####
#### https://sendit.nu & https://github.com/wuseman                           ####
####                                                                          ####
##################################################################################
#### DESCRIPTION #################################################################
##################################################################################
####                                                                          ####
#### wuzedroid is a console tool which is intended to facilitate              ####
#### the work of adb and fastboot for android devices.                        ####
####                                                                          ####
#### Author:  wuseman                                                         ####
#### Contact: info@sendit.nu                                                  ####
#### IRC:     wuseman @ Freenode.com                                          ####
#### Distro:  This script has been tested on: Lenovo Thinkpad W541 with Gentoo####
####                                                                          ####
#### Usage:   ./wuzedroid                                                     ####
####                                                                          ####
#### Enjoy another awesome 'bash' script from wuseman. Questions? Conact me!  ####
####                                                                          ####
##################################################################################
#### Begin of code  ##############################################################

r='\e[1;34m'
g='\e[1;32m'
y='\e[1;33m'
b='\e[1;34m'
c='\e[1;36m'
w='\e[0;32m'
e='\e[0m'
red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`
RED=''
NC='\033[0m' # No Color

# Features for upcomming release.
#CFG_FILE="/etc/wuzedroid/wuzedroid.conf"
#CONTACTS="/etc/wuzedroid/contacts_for_adb.txt"

if [[ $EUID -ne 0 ]]; then
  echo -e "\nYou must be Administrator to run this script\n" 2>&1
  exit 1
else

# Gentoo

#if ! [ -x "$(command -v adb)" ]; then
 # echo "Error: You miss 'dev-util/android-tool'" >&2
 #exit 0
#fi

#if [[ `lsb_release -rs` == "ubuntu" ]]
#then
#  echo "Error: You miss 'adb'" >&2
#fi

if [ "$1" == "--help" ] ; then
    echo "Usage: `basename $0` [-h]"
    exit 0
 fi
fi

#Error: You miss 'dev-util/android-tool'

clear
echo
echo -e $r"  |-|                                                              "$e
echo -e $r"  |_|                                                              "$e
echo -e $r"  /_\    \ | /                                                     "$e
echo -e $r".-|||------.----.                                                  "$e
echo -e $r"|          U    |                                                  "$e
echo -e $r"|               |                                                  "$e
echo -e $r"| ====o======== |                                                  "$e
echo -e $r"| ============= |                                                  "$e
echo -e $r"|               |                                                  "$e
echo -e $r"|_______________|                                                  "$e
echo -e $r"| ________GF337 |                                                  "$e
echo -e $r"||   wuseman   ||                             _           _     _  "$e
echo -e $r"||             ||          version 1.2       | |         (_)   | | "$e
echo -e $r"||_____________|| __      ___   _ _______  __| |_ __ ___  _  __| | "$e
echo -e $r"|___---------___| \ \ /\ / / | | |_  / _ \/ _  |  __/ _ \| |/ _  | "$e
echo -e $r"|---------------|  \ V  V /| |_| |/ /  __/ (_| | | | (_) | | (_| | "$e
echo -e $r"|[Yes][(|)][ No]|   \_/\_/  \__,_/___\___|\__,_|_|  \___/|_|\__,_| "$e
echo -e $r"| ___  ___  ___ |                                                  "$e
echo -e $r"|[<-'][CLR][.->]|    Copyright (C) 2018 wuseman <info@sendit.nu>   "$e
echo -e $r"| ___  ___  ___ |                                                  "$e
echo -e $r"|[1__][2__][3__]|           Desc:    Control ADB from cli          "$e
echo -e $r"| ___  ___  ___ |           Author:  wuseman                       "$e
echo -e $r"|[4__][5__][6__]|           Contact: info@sendit.nu                "$e
echo -e $r"| ___  ___  ___ |                                                  "$e
echo -e $r"|[7__][8__][9__]|                                                  "$e
echo -e $r"| ___  ___  ___ |                                                  "$e
echo -e $r"|[*__][0__][#__]|                                                  "$e
echo -e $r"(_______________)                                                  "$e
echo
echo -e $r"-------------------------------------------------------------------\n"$e




OPTION='Please enter your choice from below list: '
options=("Start adb-server"
         "Kill adb-server"
         "Reboot my device"
         "Preview android version"
         "Enter adb shell"
         "Enter shell"
         "Restart USB mode"    
         "Restart WIFI mode"
         "View wifi passwords stored on device"
         "Connect to my device by wifi"
         "Bruteforce pin lock"
         "Copy files from your computer to your phone"
         "Copy files from your phone to your computer"
         "Install application"
         "Uninstall application"
         "Update/Upgrade application"
         "Make a call"
         "Quit")

select opt in "${options[@]}"
do
    case $opt in

          "Start adb-server")
           if pidof -x "adb" >/dev/null; then
           echo >&2 '
           It seems adb is already running'
         else
          echo >&2 '
         '

           abort()
          {
          echo >&2 '
          ***************
          *** ABORTED ***
          ***************
          '
          echo "An error occurred. Exiting..." >&2
          exit 1
          }

         trap 'abort' 0

         set -e

         # Add your script below....
         # If an error occurs, the abort() function will be called.
         #----------------------------------------------------------
         adb start-server
         trap : 0
         echo >&2 '
          [`DONE`] : Sucessfully started adb, listening on 5037
         '
         fi
         ;;


          "Kill adb-server")
           ### START ADB SERVER
           if pidof -x "add ps aux here plz" >/dev/null; then
           echo >&2 '
                  ADB Is not running '
         else
          echo >&2 '
         '

           abort()
          {
          echo >&2 '
          ***************
          *** ABORTED ***
          ***************
          '
          echo "An error occurred. Exiting..." >&2
          exit 1
          }

         trap 'abort' 0

         set -e

         adb kill-server
         trap : 0
         echo >&2 '
         [`DONE`] : Sucessfully killed adb
         '
         fi
           ;;


          "Reboot my device")
choice=" "

while [ "$choice" != "q" ]
do
        echo
        echo "1) Reboot system as Normal"
        echo "2) Reboot to Bootloader (fasbtoot)"
        echo "3) Reboot to Recovery Mode"

        echo "q) Quit"
        echo

        read choice

        case $choice in
            '1')
             adb reboot
             echo "Rebooting your device as normal"
             ;;
            '2')
           echo "Rebooting your device into bootloader"
           adb reboot bootloader
            ;;

            '3')
           echo "Rebooting your device into recovery mode"
           echo "Use 'fastboot' instead of adb in recovery mode.."
           adb reboot recovery
             ;;


            'q') echo "Ok, quiting....";;
            *)   echo "menu item is not available; try again!";;
        esac
done

exit 0
;;

                       "Show current Android version")
                       echo -e "\nCurrent android version:"
                       adb shell getprop ro.build.version.release 
                       echo ""
                       ;;


                       "Enter adb shell")
                       echo -e "\nPlease wait, checking status of your device...\n"
                       adb shell 'su -c ' 
                       echo -e "\nAll seems to be OK and you are ready for get into android shell..."
                       echo ""
                       read -p "Want me to connect for real then type YES: " yesno
                       case $yesno in
                       YES) adb shell; echo -e "\nNOTICE: you are now back on your pc\n";;
                       no) exit 0;;
                       esac
                       ;;
 
                       
                       "Enter shell")
                       echo -e "\nTrying to enter your device terminal...\n"
                       adb shell 'su -c echo -e "Connection works fine: yes/no"'
                       read -p "Want me to connect for real: " yesno
                       case $yesno in
                       yes) adb shell;;
                       no) exit 0;;
                       esac
                       ;;


                      "Restart USB mode")
                      adb usb
                      ;;

                      "Restart WIFI  mode")
                      adb wifi
                      ;;


                      "View wifi passwords stored on device")
                      echo -e  "\n----- W I F I - P W D S -----\n"
                      adb shell 'su -c cat /data/misc/wifi/wpa_supplicant.conf' | \
                      while read -r line; do echo; echo -e "$line"; done | \
                      grep 'psk' | tr -d 'psk=' | tr -d '"' 
                      echo -e "\n-----------------------------"
                      ;;

                      "Connect to my device by wifi")
                       read -p "Device ip: " ip
                       read -p "Device port: " port
                       adb connect $ip:$port
                       ;;

                      "Bruteforce pin lock")
                      echo ----------------------------
                      echo PLEASE WAIT
                      echo ----------------------------
                      adb shell input keyevent 82
                      adb shell input swipe 407 1211 378 85
                      echo ----------------------------
                      echo BRUTE FORCING
                      echo ----------------------------
                      for i in {0000..9999}; do
                      echo -----------------------------
                      echo TRYING $i
                      echo -----------------------------
                      for (( j=0; j<${#i}; j++ )); do
                      adb shell input keyevent $((`echo ${i:$j:1}`+7))
                      done
                      adb shell input keyevent 66
                      if ! (( `expr $i + 1` % 5 )); then
                      adb shell input keyevent 66
                      sleep 30
                      adb shell input keyevent 82
                      adb shell input swipe 407 1211 378 85
                      fi
                      done
                      ;;


                     "Copy files from your computer to your phone")
                     read -p "Source file to send: " source_file
                     read -p "Folder to place $source_file: " destination
                     adb push $source_file $destination
                     echo ""
                     ;;

                     "Copy files from your phone to your computer")
                     read -p "Source file you want transfer to your computer: " android_source_file
                     read -p "Where to store it on your computer: " pc_source
                     adb pull $android_source_file $pc_source
                     echo ""
                     ;;

                    "Install application")
                    "Where is your apk file stored? (/path/to/appklication/application.apk) " apk_file
                    adb -e install $apk_file
                    echo ""
                    ;; 

                    "Uninstall application")
                    "Where is your apk file stored? (/path/to/appklication/application.apk) " apk_file_to_uninstall
                    adb -e install $apk_file_to_uninstall
                    echo ""
                    ;; 


                    "Update/Upgrade application")
                    "Where is your apk file stored? (/path/to/appklication/application.apk) " apk_file_to_update
                    adb install -r $apk_file_to_uninstall # //  -r means re-install the app and keep its data on the device.
                    echo ""
                    ;; 


                    "Make a call")
                    read -p "Enter the number you wanna call: +467" number
                    adb shell am start -a android.intent.action.CALL -d tel:46+$number # // Make a call
                    echo ""
                    ;;






                  

                   "Quit")
                   break
                   ;;
                      *) echo "Sorry, that value has not been added yet, 1-36 is your options..."
        ;;
    esac
done
